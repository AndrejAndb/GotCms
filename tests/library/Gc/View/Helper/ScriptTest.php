<?php
/**
 * This source file is part of GotCms.
 *
 * GotCms is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GotCms is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along
 * with GotCms. If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
 *
 * PHP Version >=5.3
 *
 * @category Gc_Tests
 * @package  Library
 * @author   Pierre Rambaud (GoT) <pierre.rambaud86@gmail.com>
 * @license  GNU/LGPL http://www.gnu.org/licenses/lgpl-3.0.html
 * @link     http://www.got-cms.com
 */

namespace Gc\View\Helper;

use Gc\Script\Model as ScriptModel,
    Gc\Document\Model as DocumentModel,
    Zend\View\Renderer\PhpRenderer as View,
    Zend\View\Model\ViewModel;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-10-17 at 20:40:07.
 *
 * @backupGlobals disabled
 * @backupStaticAttributes disabled
 * @group Gc
 * @category Gc_Tests
 * @package  Library
 */
class ScriptTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Script
     */
    protected $object;

    /**
     * @var ScriptModel
     */
    protected $_script;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->_script = ScriptModel::fromArray(array(
            'name' => 'Script name',
            'identifier' => 'script-identifier',
            'description' => 'Script description',
            'content' => 'script Content',
        ));
        $this->_script->save();
        $this->object = new Script;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        unset($this->object);
        $this->_script->delete();
        unset($this->_script);
    }

    /**
     * @covers Gc\View\Helper\Script::__invoke
     */
    public function test__invoke()
    {
        ob_start();
        $this->object->__invoke('script-identifier');
        $data = ob_get_clean();
        $this->assertEquals('script Content', $data);
        $this->assertFalse($this->object->__invoke('fake-script-identifier'));
    }

    /**
     * @covers Gc\View\Helper\Script::getParam
     */
    public function testGetParam()
    {
        ob_start();
        $this->object->__invoke('script-identifier', array('key' => 'value'));
        $data = ob_get_clean();
        $this->assertEquals('value', $this->object->getParam('key'));
        $this->assertNull($this->object->getParam('fake-key'));
    }

    /**
     * @covers Gc\View\Helper\Script::getDocument
     */
    public function testGetDocument()
    {
        $parent = new ViewModel();
        $parent->setTemplate('layout');
        $view = new View();
        $view->plugin('view_model')->setRoot($parent);
        $view->resolver()->addPath(__DIR__ . '/_files/views');
        $this->object->setView($view);
        $this->object->getView()->layout()->currentDocument = new DocumentModel();
        $this->assertInstanceOf('Gc\Document\Model', $this->object->getDocument());
    }

    /**
     * @covers Gc\View\Helper\Script::getRequest
     */
    public function testGetRequest()
    {
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Request', $this->object->getRequest());
    }

    /**
     * @covers Gc\View\Helper\Script::getResponse
     */
    public function testGetResponse()
    {
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $this->object->getResponse());
    }

    /**
     * @covers Gc\View\Helper\Script::plugin
     */
    public function testPlugin()
    {
        $this->assertInstanceOf('Zend\Mvc\Controller\Plugin\Redirect', $this->object->plugin('redirect'));
    }

    /**
     * @covers Gc\View\Helper\Script::__call
     */
    public function test__call()
    {
        $this->assertInstanceOf('Zend\Mvc\Controller\Plugin\Redirect', $this->object->redirect());
    }

    /**
     * @covers Gc\View\Helper\Script::__call
     */
    public function test__callWithIsCallablePlugin()
    {
        $this->assertInstanceOf('Zend\Mvc\Controller\Plugin\Params', $this->object->params());
    }
}
