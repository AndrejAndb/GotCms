<?php
namespace Gc\View\Helper;

use Zend\Form\Element;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-10-17 at 20:40:08.
 * @backupGlobals disabled
 * @backupStaticAttributes disabled
 * @group Gc
 */
class FormCheckboxTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var FormCheckbox
     */
    protected $_object;
    /**
     * @var Element\Checkbox
     */
    protected $_element;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->_element = new Element\Checkbox('foo');
        $options = array(
            'checked_value' => 'checked',
            'unchecked_value' => 'unchecked',
        );

        $this->_element->setOptions($options);
        $this->_object = new FormCheckbox;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Gc\View\Helper\FormCheckbox::render
     */
    public function testRender()
    {
        $markup = $this->_object->render($this->_element);

        $this->assertContains('type="checkbox"', $markup);
        $this->assertContains('name="foo"', $markup);
    }

    /**
     * @covers Gc\View\Helper\FormCheckbox::render
     */
    public function testRenderWithoutElementCheckboxr()
    {
        $this->setExpectedException('Zend\Form\Exception\InvalidArgumentException');
        $this->_object->render(new Element\Text('bar'));
    }

    /**
     * @covers Gc\View\Helper\FormCheckbox::render
     */
    public function testRenderWithoutName()
    {
        $this->setExpectedException('Zend\Form\Exception\DomainException');
        $this->_object->render(new Element\Checkbox());
    }

    /**
     * @covers Gc\View\Helper\FormCheckbox::render
     */
    public function testRenderWithCheckedValue()
    {
        $this->_element->setValue('checked');
        $markup = $this->_object->render($this->_element);
        $this->assertContains('checked="checked"', $markup);
    }

    /**
     * @covers Gc\View\Helper\FormCheckbox::render
     */
    public function testRenderWithClassAndId()
    {
        $this->_element->setValue('checked');
        $this->_element->setAttribute('id', 'bar');
        $this->_element->setAttribute('class', 'input-checkbox');
        $markup = $this->_object->render($this->_element);
        $this->assertContains('checked="checked"', $markup);
        $this->assertContains('class="input-checkbox"', $markup);
    }
}
